<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <flow name="storePersonFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/person" doc:name="Store Person" allowedMethods="POST"/>
        <set-property propertyName="http.status" value="201" doc:name="Property"/>
         <json:json-to-object-transformer doc:name="Convert to person object" returnClass="com.mulye.example.Person"/>
        <set-variable doc:name="Lookup next person id" value="#[message.outboundProperties'personId'.incrementAndGet()]" variableName="personId"/>
        <expression-component doc:name="Store person"><![CDATA[(message.inboundProperties..'personDataStore'.put(personId, payload);]]></expression-component>
        <set-payload doc:name="Set success response" value="{ &quot;status&quot;: &quot;success&quot;, &quot;statusDescription&quot;: &quot;person created successfully&quot;}"/>
    </flow>
</mule>
